<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

<!-- Spring Security -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/spring/security-context.xml
        </param-value>
    </context-param>


    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

<!-- Reads request input using UTF-8 encoding -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
      
    
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

<!-- Enables clean URLs with JSP views e.g. /welcome instead of /app/welcome -->
    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>UrlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- Handles all requests into the application -->
    <servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>    
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/spring/mvc-context.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/app/*</url-pattern>
    </servlet-mapping>  

    <listener>  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>  
    </listener> 

    <!-- GWT Servlets -->
#foreach($t in $types)
#if(! ${t.hasTag("transient")})
    <servlet>
        <servlet-name>${util.uncapitalize(${t.name})}DataServiceServlet</servlet-name>
        <servlet-class>${context.getProperty("namespace")}.server.service.${t.name}DataServiceServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>${util.uncapitalize(${t.name})}DataServiceServlet</servlet-name>
        <url-pattern>/${target.getProperty("url.pattern.root")}/${util.uncapitalize(${t.name})}DataService</url-pattern>
    </servlet-mapping>
#end
#end
#foreach($c in ${model.getControls()})
    <servlet>
        <servlet-name>${util.uncapitalize(${c.name})}</servlet-name>
        <servlet-class>${context.getProperty("namespace")}.server.service.${c.name}Servlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>${util.uncapitalize(${c.name})}</servlet-name>
        <url-pattern>/${target.getProperty("url.pattern.root")}/${util.uncapitalize(${c.name})}</url-pattern>
    </servlet-mapping>
#end
    <servlet>
        <servlet-name>sessionServiceServlet</servlet-name>
        <servlet-class>${context.getProperty("namespace")}.server.service.SessionServiceServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>sessionServiceServlet</servlet-name>
        <url-pattern>/${target.getProperty("url.pattern.root")}/sessionService</url-pattern>
    </servlet-mapping>

    <session-config>
      <session-timeout>30</session-timeout> 
    </session-config>
</web-app>
