package ${context.getProperty("namespace")}.server.service;

import com.google.gwt.user.server.rpc.RemoteServiceServlet;
import ${context.getProperty("namespace")}.client.service.SessionService;
import ${context.getProperty("namespace")}.server.security.SecuredUser;
import java.io.IOException;
import org.codehaus.jackson.map.ObjectMapper;
import org.springframework.security.core.context.SecurityContextHolder;


/**
 * Provides access to session attributes
 */
public class SessionServiceServlet extends RemoteServiceServlet implements SessionService {

    /**
     * Get the current secured user
     */
    @Override
    public String getCurrentUser() {
        SecuredUser securedUser = (SecuredUser) SecurityContextHolder.getContext().getAuthentication().getPrincipal();
        if (securedUser != null) {
            ${context.getProperty("namespace")}.server.entity.User u = securedUser.getUser();
            ObjectMapper mapper = new ObjectMapper();
            String json = null;
        try {
            json = mapper.writeValueAsString(u);
        } catch (IOException e) {
            e.printStackTrace();
        }
        return json;
    }

    return null;
}

    /**
     * Get the requested entity
     */
    public String getEntity(String name) {
        return (String) getThreadLocalRequest().getSession().getAttribute(name);
    }
}

